name: CI

on:
  push: null

jobs:

  ormolu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: haskell-actions/run-ormolu@v14

  hlint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: haskell/actions/hlint-setup@v2
      with:
        version: 3.5
    - uses: haskell/actions/hlint-run@v2
      with:
        fail-on: status

  build:
    strategy:
      matrix:
        include:
          - ghc: 9.4.4
            platform: ubuntu
    runs-on: ${{ matrix.platform }}-latest
    name: GHC ${{ matrix.ghc }} on ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - run: mkdir artifact

      - run: cp -R data LICENSE.markdown README.markdown artifact

      - run: cabal sdist --output-dir artifact

      - id: artifact
        run: echo '::set-output name=directory::artifact/${{ matrix.platform }}'

      - run: mkdir ${{ steps.artifact.outputs.directory }}

      # https://discourse.haskell.org/t/incident-github-actions-ci-failure-ghcup/5761
      - run: sudo chown -R $USER /usr/local/.ghcup

      - id: setup-haskell
        uses: haskell/actions/setup@v2
        with:
          ghc-version: ${{ matrix.ghc }}

      - run: cabal configure --enable-optimization=2 --enable-tests --jobs

      - run: cabal freeze

      - run: cat cabal.project.freeze

      - run: cp cabal.project.freeze ${{ steps.artifact.outputs.directory }}

      - run: cabal outdated --v2-freeze-file cabal.project.freeze

      - uses: actions/cache@v3
        with:
          path: ${{ steps.setup-haskell.outputs.cabal-store }}
          key: ${{ matrix.platform }}/${{ hashFiles('cabal.project.freeze') }}
          restore-keys: ${{ matrix.platform }}/

      - run: cabal build --only-dependencies

      - run: cabal build

      - run: cabal run -- haskellweekly-test-suite --fail-on-focused --randomize

      - run: cp "$( cabal list-bin haskellweekly )" ${{ steps.artifact.outputs.directory }}

      - uses: svenstaro/upx-action@v2
        with:
          file: ${{ steps.artifact.outputs.directory }}/haskellweekly${{ matrix.extension }}

      - uses: actions/upload-artifact@v3
        with:
          name: haskellweekly-${{ github.sha }}
          path: artifact

  docker:
    needs: build
    runs-on: ubuntu-latest
    name: Docker
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v3
        with:
          name: haskellweekly-${{ github.sha }}
          path: artifact

      - run: mv artifact/data docker

      - run: chmod +x artifact/ubuntu/haskellweekly

      - run: mv artifact/ubuntu/haskellweekly docker

      - id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          flavor: latest=false
          tags: |
            type=sha,format=long
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}

      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/build-push-action@v5
        with:
          context: docker
          labels: ${{ steps.meta.outputs.labels }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}

  aws:
    needs: build
    runs-on: ubuntu-latest
    name: Deploy to AWS
    if: github.ref == 'refs/heads/haskellweekly'
    steps:

      - uses: actions/checkout@v4

      - uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-region: us-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: haskellweekly
          template: config/cloud-formation.yaml
          no-fail-on-empty-changeset: '1'
          capabilities: CAPABILITY_NAMED_IAM

  fly:
    needs: docker
    runs-on: ubuntu-latest
    name: Deploy to Fly.io
    if: github.ref == 'refs/heads/haskellweekly'
    steps:
      - uses: actions/checkout@v4

      - uses: superfly/flyctl-actions/setup-flyctl@dfdfedc86b296f5e5384f755a18bf400409a15d0

      - run: flyctl deploy --image ghcr.io/haskellweekly/haskellweekly:sha-${{ github.sha }}
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
