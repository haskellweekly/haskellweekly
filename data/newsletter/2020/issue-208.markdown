Welcome to another issue of Haskell Weekly!
[Haskell](https://www.haskell.org) is a safe, purely functional programming language with a fast, concurrent runtime.
This is a weekly summary of what's going on in its community.

## Featured

- [Blazing fast Fibonacci numbers using Monoids](http://www.haskellforall.com/2020/04/blazing-fast-fibonacci-numbers-using.html) by Gabriella Gonzalez
  > This post illustrates a nifty application of Haskell's standard library to solve a numeric problem.

- [Continuous Integration in Haskell](https://medium.com/@_KtorZ_/continuous-integration-in-haskell-9ad2a73e8e46) by Matthias Benkort
  > I will go through how to setup a continuous integration environment for Haskell projects.

- [Great moments in Haskell history](https://typeclasses.com/timeline) by Type Classes
  > April 1990: Haskell 1.0: The first specification Haskell 1.0 of Haskell, called the "Haskell Report".

- [How many function arguments?](https://jmtd.net/log/how_many_arguments/) by Jonathan Dowland
  > In Haskell it's quite common for the implementation of a function to reference one less argument than the type signature declares.

- [Is Haskell a Bad Choice?](https://blog.bojo.wtf/management/2020/04/15/is-haskell-a-bad-choice.html) by Brian Jones
  > I hope what I have laid out below serves as a good view into a non-software company up in Alaska using Haskell to develop applications with.

- [Micro C, Part 3: Generating LLVM](https://blog.josephmorag.com/posts/mcc3/) by Joseph Morag
  > We will then pretty print the generated bytecode with llvm-hs-pretty and call `clang` on it to generate machine code for our preferred target.

- [Parallel typeclass for Haskell](https://gvolpe.github.io/blog/parallel-typeclass-for-haskell/) by Gabriel Volpe
  > In the following sections, I will be providing examples and use cases for this typeclass to showcase why it would be great to have it in Haskell.

- [Permissive, then restrictive: learning how to design Haskell programs](https://williamyaoh.com/posts/2020-04-19-permissive-vs-restrictive.html) by William Yao
  > Functional design has historically been somewhat difficult to teach, and even harder to teach concisely.

- [Polysemy - Part III - Tests](https://sir4ur0n.github.io/posts/polysemy-tests.html) by Julien Debon
  > The problem is, how do you test effectful code? As the name indicates, naive tests would have various effects, rendering them "hard" to both write and run.

- [Syntactic ambiguity resolution in the GHC parser](https://blog.shaynefletcher.org/2020/04/syntactic-ambiguity-resolution-in-ghc.html) by Shayne Fletcher
  > There are places in the Haskell grammar where it's not known apriori whether it's an expression a command or a pattern that is being parsed.

## Jobs

- [Interos is Hiring Full Stack Haskell Software Engineers](https://www.interos.ai/vacancies/#haskell-software-engineer) (ad)
  > At Interos, we are disrupting the way Fortune 500 companies and government agencies identify and respond to risk within their supply chains. We deliver the data and insights to business leaders that help them identify, visualize and understand the ripple effects that could impact their supply chains, before they happen. Recently funded by Kleiner Perkins and pivoting to an automated solution, Interos is in essence, a start-up SaaS environment.

- [Haskell Engineer at Signify Technology in Austin](https://www.signifytechnology.com/job/haskell-engineer/)

Trying to hire a Haskell developer?
You should [advertise with us](https://haskellweekly.news/advertising.html)!

## In brief

- [Adding Interactivity with Elm!](https://mmhaskell.com/blog/2020/2/18/addin) by Monday Morning Haskell
  > In this final part of our series, we'll combine Servant with Elm to produce an interactive page.

- [Axel: Haskell's semantics, plus Lisp's macros](https://axellang.github.io/) by Joshua Grosso
  > Meet Axel: a purely functional, extensible, and powerful programming language.

- [Build systems Ã  la carte: Theory and practice](https://www.cambridge.org/core/journals/journal-of-functional-programming/article/build-systems-a-la-carte-theory-and-practice/097CE52C750E69BD16B78C318754C7A4) by Andrey Mokhov
  > In this paper, we offer a systematic, and executable, framework for developing and comparing build systems, viewing them as related points in a landscape rather than as isolated phenomena.

- [Coming to PureScript from Haskell/Reflex/Nix](https://srid.ca/purescript-nix) by Sridhar Ratnakumar
  > The initial feel for what it is like to develop PureScript as a Haskeller who comes from the world of Nix and GHCJS.

## Show & tell

- [servant-forma](https://github.com/aveltras/servant-forma/tree/f8f43f2f608be2317fd018c46c7ff8ed1b20b7db) by Romain Viallard
  > Servant combinator to integrate your Forma validated forms.

- [singlethongs](https://hackage.haskell.org/package/singlethongs-0.1) by Renzo Carbonara
  > Like singletons, but much smaller.

- [souffle-haskell](https://github.com/luc-tielen/souffle-haskell/tree/f16a6ed025d778452cbad1289e2aa39e0b7200ef) by Luc Tielen
  > Bindings for the Souffle Datalog language.

- [telegram-raw-api](https://np.reddit.com/r/haskell/comments/g2wkch/ann_bindings_to_the_telegram_bot_api/) by Poscat
  > I'm announcing my rewrite of the telegram-api library, which divides into 2 packages: telegram-types and telegram-raw-api.

## Call for participation

-   [cabal: Change knownSuffixHandlers from `[(String, String)]` to `[(PackageName, UnqualComponentName, Extension)]`](https://github.com/haskell/cabal/issues/6727)
-   [dunai: Dunai-test is missing Functor constraint](https://github.com/ivanperez-keera/dunai/issues/208)
-   [neuron: neuron new: disallow empty title](https://github.com/srid/neuron/issues/123)
